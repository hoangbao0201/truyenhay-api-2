// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  fullName String
  password String
  level Int? @default(0)
  avatarUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comics Comic[]

  @@map("users") // users id  "table's name" in Postgres SQL
}

model Comic {
  id Int @id @default(autoincrement())
  slug String
  title String
  thumbnail String

  authors String?
  status String?
  other_names String?
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  comicGenres ComicGenre[]

  @@map("comics") // comics id  "table's name" in Postgres SQL
}

model Genre {
  id            Int @id @default(autoincrement())
  slug          String
  title         String
  description   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comicGenres ComicGenre[]

  @@map("genres") // genres id  "table's name" in Postgres SQL
}

model ComicGenre {
  comicId Int
  genreId Int

  comic Comic @relation(fields: [comicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  genre Genre @relation(fields: [genreId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([comicId, genreId])
}